package Codepkg;

import static Codepkg.Admin.ui;
import com.itextpdf.text.DocumentException;
import java.io.FileNotFoundException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Mr.Faizan Sh
 */
public class UserInterface extends javax.swing.JFrame {

    /**
     * Creates new form userinterce
     */
    public static int selectedYear;
    private String[] slist;
    DataBase dbGlobal;

    public UserInterface() throws SQLException {
        selectedYear = 1;
        dbGlobal = new DataBase();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jbAddTeacher = new javax.swing.JButton();
        jTabStudentAndTeacher = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableStudents = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableTeachers = new javax.swing.JTable();
        jbAddStudent = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jTabHome = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField_teacherName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField_teacherID = new javax.swing.JTextField();
        jTextField_teacherDepartment = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableGroupDetails = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jbDelete = new javax.swing.JButton();
        jTextField_Gname = new javax.swing.JTextField();
        jPanelAddGroup = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jbSaveGroup = new javax.swing.JButton();
        jTextFieldTeacherName = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTextArea7 = new javax.swing.JTextArea();
        jPanel11 = new javax.swing.JPanel();
        jTextField7 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextFieldGroupName = new javax.swing.JTextField();
        undo = new javax.swing.JButton();
        jTextFieldTeacherID = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jbCancelButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jComboBoxDepartment = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldNewTeacherName = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jbSaveUpdateTeacher = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jTextFieldNewTeacherID = new javax.swing.JTextField();
        jbDeleteTeacher1 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jbClearField = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldStuName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextFieldStuUoB = new javax.swing.JTextField();
        jbSaveUpdateStudent = new javax.swing.JButton();
        jComboBoxYear = new javax.swing.JComboBox<>();
        jbDeleteStudent = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();
        jbClearFieldsStudent = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jbAddGroup1 = new javax.swing.JButton();
        jbAddGroup = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jGroups = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Group Maker");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButton3.setText("Print All to PDF");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Exit System");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton5))
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addContainerGap())
        );

        jbAddTeacher.setText("Add Teacher");
        jbAddTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddTeacherActionPerformed(evt);
            }
        });

        jTabStudentAndTeacher.setToolTipText("");
        jTabStudentAndTeacher.setAutoscrolls(true);

        jTableStudents.setAutoCreateRowSorter(true);
        jTableStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UoB", "Name", "Year", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableStudents.setToolTipText("(+) Click to add in new group");
        jTableStudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableStudentsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableStudents);

        jTabStudentAndTeacher.addTab("Students", jScrollPane3);

        jTableTeachers.setAutoCreateRowSorter(true);
        jTableTeachers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Status"
            }
        ));
        jTableTeachers.setToolTipText("(+) Click to add");
        jTableTeachers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTeachersMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTableTeachers);

        jTabStudentAndTeacher.addTab(" Teachers", jScrollPane4);

        jbAddStudent.setText("Add Student");
        jbAddStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddStudentActionPerformed(evt);
            }
        });

        jButton12.setText("Print Table to PDF");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabStudentAndTeacher, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jbAddStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbAddTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAddTeacher)
                    .addComponent(jbAddStudent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabStudentAndTeacher)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabStudentAndTeacher.getAccessibleContext().setAccessibleName("Students");
        jTabStudentAndTeacher.getAccessibleContext().setAccessibleDescription("Unalocated Students");

        jTabHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabHomeMouseClicked(evt);
            }
        });

        jLabel1.setText("Teacher Name");

        jTextField_teacherName.setEditable(false);

        jLabel3.setText("ID");

        jTextField_teacherID.setEditable(false);

        jTextField_teacherDepartment.setEditable(false);

        jLabel4.setText("Department");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(12, 12, 12)
                        .addComponent(jTextField_teacherName, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField_teacherID, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jTextField_teacherDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(274, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField_teacherName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_teacherDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField_teacherID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTableGroupDetails.setAutoCreateRowSorter(true);
        jTableGroupDetails.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTableGroupDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UoB", "Name", "Year"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableGroupDetails.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTableGroupDetails.setRowHeight(25);
        jTableGroupDetails.setRowMargin(10);
        jScrollPane2.setViewportView(jTableGroupDetails);

        jButton6.setText("Edit");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jbDelete.setText("Delete");
        jbDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeleteActionPerformed(evt);
            }
        });

        jTextField_Gname.setEditable(false);
        jTextField_Gname.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jbDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(301, 301, 301)
                .addComponent(jTextField_Gname, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jTextField_Gname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabHome.addTab("Group Details", jPanel4);

        jbSaveGroup.setText("Save");
        jbSaveGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSaveGroupActionPerformed(evt);
            }
        });

        jTextFieldTeacherName.setEditable(false);
        jTextFieldTeacherName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTeacherNameActionPerformed(evt);
            }
        });

        jButton8.setText("Clear Fields");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jTextArea1.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(1);
        jTextArea1.setText("To Edit: Click on group name from the group column and after editing click update.");
        jTextArea1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setViewportView(jTextArea1);

        jLabel13.setText("Teacher");

        jTextArea2.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea2.setColumns(20);
        jTextArea2.setRows(1);
        jTextArea2.setText("Click on teacher from teacher column");
        jTextArea2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane6.setViewportView(jTextArea2);

        jTextArea7.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea7.setColumns(20);
        jTextArea7.setRows(1);
        jTextArea7.setText("To Save: Add fields and click Save.");
        jTextArea7.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane11.setViewportView(jTextArea7);

        jTextField7.setEditable(false);
        jTextField7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField7MouseClicked(evt);
            }
        });

        jLabel7.setText("Student 3");

        jLabel8.setText("Student 4");

        jLabel11.setText("Student 7");

        jTextField5.setEditable(false);
        jTextField5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField5MouseClicked(evt);
            }
        });

        jLabel10.setText("Student 6");

        jTextField4.setEditable(false);
        jTextField4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField4MouseClicked(evt);
            }
        });

        jTextField3.setEditable(false);
        jTextField3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField3MouseClicked(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel12.setText("Student 8");

        jLabel9.setText("Student 5");

        jTextField8.setEditable(false);
        jTextField8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField8MouseClicked(evt);
            }
        });

        jTextField2.setEditable(false);
        jTextField2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField2MouseClicked(evt);
            }
        });

        jLabel6.setText("Student 2");

        jLabel5.setText("Student 1");

        jTextField6.setEditable(false);
        jTextField6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField6MouseClicked(evt);
            }
        });
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(19, 19, 19)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jTextField2)
                    .addComponent(jTextField3)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField5)
                    .addComponent(jTextField6)
                    .addComponent(jTextField7)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))))
                .addContainerGap())
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jTextField1, jTextField2, jTextField3, jTextField4, jTextField5, jTextField6, jTextField7, jTextField8});

        jLabel19.setText("Group Name");

        undo.setText("Undo");
        undo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoActionPerformed(evt);
            }
        });

        jTextFieldTeacherID.setEditable(false);
        jTextFieldTeacherID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTeacherIDActionPerformed(evt);
            }
        });

        jLabel21.setText("ID");

        jbCancelButton.setText("Cancel");
        jbCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel13)
                                                .addGap(29, 29, 29)
                                                .addComponent(jTextFieldTeacherName, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(38, 38, 38)
                                                .addComponent(jLabel21))
                                            .addComponent(jButton8))
                                        .addGap(28, 28, 28)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addComponent(jbCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jbSaveGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jTextFieldTeacherID, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(undo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(undo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTeacherName)
                    .addComponent(jTextFieldTeacherID)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSaveGroup)
                    .addComponent(jButton8)
                    .addComponent(jbCancelButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelAddGroupLayout = new javax.swing.GroupLayout(jPanelAddGroup);
        jPanelAddGroup.setLayout(jPanelAddGroupLayout);
        jPanelAddGroupLayout.setHorizontalGroup(
            jPanelAddGroupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAddGroupLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(81, 81, 81))
        );
        jPanelAddGroupLayout.setVerticalGroup(
            jPanelAddGroupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddGroupLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabHome.addTab("Add/Edit Group", jPanelAddGroup);

        jComboBoxDepartment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Computer Science", "Electrical Engineering", "Not Specified" }));
        jComboBoxDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDepartmentActionPerformed(evt);
            }
        });

        jLabel14.setText("Name");

        jTextFieldNewTeacherName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNewTeacherNameActionPerformed(evt);
            }
        });

        jLabel15.setText("Department");

        jbSaveUpdateTeacher.setText("Save");
        jbSaveUpdateTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSaveUpdateTeacherActionPerformed(evt);
            }
        });

        jLabel20.setText("ID");

        jTextFieldNewTeacherID.setEditable(false);
        jTextFieldNewTeacherID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNewTeacherIDActionPerformed(evt);
            }
        });

        jbDeleteTeacher1.setText("Delete");
        jbDeleteTeacher1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeleteTeacher1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel20))
                .addGap(59, 59, 59)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jbDeleteTeacher1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbSaveUpdateTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextFieldNewTeacherID, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxDepartment, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldNewTeacherName, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNewTeacherID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNewTeacherName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(26, 26, 26)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(53, 53, 53)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSaveUpdateTeacher)
                    .addComponent(jbDeleteTeacher1))
                .addContainerGap())
        );

        jTextArea3.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea3.setColumns(20);
        jTextArea3.setRows(1);
        jTextArea3.setText("To Save: Add a teacher name and select the department.");
        jTextArea3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane7.setViewportView(jTextArea3);

        jTextArea4.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea4.setColumns(20);
        jTextArea4.setRows(1);
        jTextArea4.setText("To Edit: Click on his name from the table and after editing click on update.");
        jTextArea4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane8.setViewportView(jTextArea4);

        jbClearField.setText("Clear Fields");
        jbClearField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbClearFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 796, Short.MAX_VALUE)
                            .addComponent(jScrollPane8)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jbClearField)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jbClearField)
                .addContainerGap())
        );

        jTabHome.addTab("Add/Edit Teacher", jPanel6);

        jLabel16.setText("Name");

        jLabel17.setText("Year");

        jLabel22.setText("UoB");

        jTextFieldStuUoB.setEditable(false);
        jTextFieldStuUoB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldStuUoBActionPerformed(evt);
            }
        });

        jbSaveUpdateStudent.setText("Save");
        jbSaveUpdateStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSaveUpdateStudentActionPerformed(evt);
            }
        });

        jComboBoxYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6" }));

        jbDeleteStudent.setText("Delete");
        jbDeleteStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeleteStudentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel22)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel23))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jbDeleteStudent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addComponent(jbSaveUpdateStudent))
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextFieldStuUoB, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                        .addComponent(jTextFieldStuName)
                        .addComponent(jComboBoxYear, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(198, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldStuUoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldStuName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jComboBoxYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSaveUpdateStudent)
                    .addComponent(jbDeleteStudent))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextArea5.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea5.setColumns(20);
        jTextArea5.setRows(1);
        jTextArea5.setText("To Edit: Click on his name from the table and after editing click on update.");
        jTextArea5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane9.setViewportView(jTextArea5);

        jTextArea6.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea6.setColumns(20);
        jTextArea6.setRows(1);
        jTextArea6.setText("To Save: Add a teacher name and select the department.");
        jTextArea6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane10.setViewportView(jTextArea6);

        jbClearFieldsStudent.setText("Clear Fields");
        jbClearFieldsStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbClearFieldsStudentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane10)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 175, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jbClearFieldsStudent)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addComponent(jbClearFieldsStudent)
                .addContainerGap())
        );

        jTabHome.addTab("Add/Edit Student", jPanel7);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "All" }));
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Select year");

        jbAddGroup1.setText("Print Groups to PDF");
        jbAddGroup1.setToolTipText("Click to add new group");
        jbAddGroup1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddGroup1ActionPerformed(evt);
            }
        });

        jbAddGroup.setText("Add Group");
        jbAddGroup.setToolTipText("Click to add new group");
        jbAddGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddGroupActionPerformed(evt);
            }
        });

        jGroups.setAutoCreateRowSorter(true);
        jGroups.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Groups", "Students"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jGroups.setColumnSelectionAllowed(true);
        jGroups.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jGroupsMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jGroups);
        jGroups.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jGroups.getColumnModel().getColumnCount() > 0) {
            jGroups.getColumnModel().getColumn(0).setHeaderValue("Groups");
            jGroups.getColumnModel().getColumn(1).setHeaderValue("Students");
        }

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbAddGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(23, 23, 23)
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jbAddGroup1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jbAddGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAddGroup1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel18.setFont(new java.awt.Font("Microsoft YaHei Light", 1, 18)); // NOI18N
        jLabel18.setText("Coursework 1 (20%): Tutorial Groups Allocation System");

        jMenu1.setText("File");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Load CSV File");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);
        jMenu1.add(jSeparator4);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Load Excel File");
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTabHome)
                                    .addComponent(jSeparator1)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(10, 10, 10)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator2)
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addGap(4, 4, 4)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTabHome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3))
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAddGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddGroupActionPerformed
        // TODO add your handling code here:

        backupMembers();
        jbAddGroup.setEnabled(false);
        jbAddTeacher.setEnabled(false);
        jbAddStudent.setEnabled(false);

        jTabHome.setEnabledAt(2, false);
        jTabHome.setEnabledAt(3, false);

        jTextFieldGroupName.setEditable(true);

        int count = 0;
        jTabHome.setSelectedIndex(1);

        try {
            DataBase db = new DataBase();
            ResultSet rs = db.showCreatedGroups(ui.selectedYear);

            String name = "Group0" + count;
            ArrayList<String> array = new ArrayList();

            for (int i = 0; rs.next(); i++) {
                array.add(rs.getString("name").trim());
                System.out.println("Index:" + i + " Name: " + array.get(i));
            }

            for (int i = 0; i < array.size(); i++) {
                if ((array.get(i).trim().equals(name))) {
                    count++;
                    name = "Group0" + count;
                    i = -1;
                    System.out.println("lets do this again");
                }
                System.out.println("(array.get(" + i + ").equals(" + name + ")");
            }

            jTextFieldGroupName.setText(name);

            db.st.close();
            db.con.close();

            clearFields();

        } catch (Exception ex) {

        }
    }//GEN-LAST:event_jbAddGroupActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DataBase db;
        try {
            db = new DataBase();
            db.printDatabase();
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        selectedYear = Integer.parseInt((String) jComboBox1.getSelectedItem());
        try {
//            Admin admin = new Admin();
//            admin.showGroups();
            updateGroups();
            updateGroupedStudents();
            updateUnGroupedStudents();
            updateTeacher();
            updateUnGroupedTeacher();

        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1MouseClicked

    private void jbAddTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddTeacherActionPerformed
        // TODO add your handling code here:
        jTabHome.setSelectedIndex(2);
        clearStudents();
    }//GEN-LAST:event_jbAddTeacherActionPerformed

    void clearStudents() {
        jTextFieldStuName.setText("");
        jTextFieldStuUoB.setText("");
        jComboBoxYear.setSelectedIndex(0);
    }

    private void jbAddStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddStudentActionPerformed
        // TODO add your handling code here:
        jTabHome.setSelectedIndex(3);
        clearTeacher();
    }//GEN-LAST:event_jbAddStudentActionPerformed

    void clearTeacher() {
        jTextFieldNewTeacherID.setText("");
        jTextFieldNewTeacherName.setText("");
        jComboBoxDepartment.setSelectedIndex(2);
    }

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextFieldTeacherNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTeacherNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTeacherNameActionPerformed

    private void jbSaveGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSaveGroupActionPerformed
        try {
            // TODO add your handling code here:

            saveGroup();

            ReFresh();

            jTabHome.setEnabledAt(2, true);
            jTabHome.setEnabledAt(3, true);
            jbAddGroup.setEnabled(true);
            jbAddTeacher.setEnabled(true);
            jbAddStudent.setEnabled(true);
            clearFields();
            jTextFieldGroupName.setText("");

        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jbSaveGroupActionPerformed

    private void jTextFieldNewTeacherNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNewTeacherNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNewTeacherNameActionPerformed

    private void jComboBoxDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDepartmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxDepartmentActionPerformed


    private void jbSaveUpdateTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSaveUpdateTeacherActionPerformed
        try {
            // TODO add your handling code here:

            saveTeacher();
            updateTeacher();
            updateUnGroupedTeacher();

//        saveTeacher();
        } catch (SQLException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jbSaveUpdateTeacherActionPerformed

    private void jTextFieldStuUoBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldStuUoBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldStuUoBActionPerformed

    private void jbAddGroup1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddGroup1ActionPerformed
        try {
            DataBase db = new DataBase();
            db.printGroups();
        } catch (SQLException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jbAddGroup1ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // Students And Teachers table
        DataBase db;
        try {
            db = new DataBase();
            if (jTabStudentAndTeacher.getSelectedIndex() == 0) {
                db.printStudents();
            } else if (jTabStudentAndTeacher.getSelectedIndex() == 1) {
                db.printTeachers();
            }
        } catch (SQLException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jbSaveUpdateStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSaveUpdateStudentActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:

            saveStudent();
            updateGroupedStudents();
            updateUnGroupedStudents();

//        saveTeacher();
        } catch (SQLException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jbSaveUpdateStudentActionPerformed

    private void jGroupsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jGroupsMouseClicked

        String groupName = jGroups.getValueAt(jGroups.getSelectedRow(), 0).toString();
        jTextField_Gname.setText(groupName);

        try {
            // TODO add your handling code here:
            if (jTabHome.getSelectedIndex() == 0) {
                updateGroupDetails();
            } else if (jTabHome.getSelectedIndex() == 1) {
                populateEditGroup();

            }
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jGroupsMouseClicked

    private void jTableStudentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableStudentsMouseClicked
        try {
            // TODO add your handling code here:
            if (jTabHome.getSelectedIndex() == 1) {
                addNewGroup();
            }
            if (jTabHome.getSelectedIndex() == 3) {
                AddUpdateStudent();
            }

        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jTableStudentsMouseClicked

    private void jTableTeachersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTeachersMouseClicked

        if (jTabHome.getSelectedIndex() == 1) {
            try {
                // TODO add your handling code here:
//        updateUnGroupedTeacher();
                addTeacherinNewGroup();
            } catch (Exception ex) {
                Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (jTabHome.getSelectedIndex() == 2) {
            try {
                editTeacher();
            } catch (Exception ex) {
                Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_jTableTeachersMouseClicked

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        clearFields();
        jTextFieldGroupName.setEnabled(true);
        jTextFieldGroupName.setText("");

    }//GEN-LAST:event_jButton8ActionPerformed

    public void clearFields() {
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextFieldTeacherName.setText("");
        jTextFieldTeacherID.setText("");
    }

    public void clearGroupName() {
        jTextFieldGroupName.setText("");
    }

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        // TODO add your handling code here:

        try {
            DataBase db;
            db = new DataBase();
            int id = Integer.parseInt(jTextField1.getText().trim());
            db.unAllocateAstudent(id);

        } catch (SQLException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextField1.setText("");
        try {
            updateGroupedStudents();
            updateUnGroupedStudents();
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jTextField1MouseClicked

    private void jTextField2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField2MouseClicked
        // TODO add your handling code here:
        try {
            DataBase db;
            db = new DataBase();
            int id = Integer.parseInt(jTextField2.getText().trim());
            db.unAllocateAstudent(id);

        } catch (SQLException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextField2.setText("");
        try {
            updateGroupedStudents();
            updateUnGroupedStudents();
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextField2MouseClicked

    private void jTextField3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField3MouseClicked
        // TODO add your handling code here:
        try {
            DataBase db;
            db = new DataBase();
            int id = Integer.parseInt(jTextField3.getText().trim());
            db.unAllocateAstudent(id);

        } catch (SQLException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextField3.setText("");
        try {
            updateGroupedStudents();
            updateUnGroupedStudents();
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextField3MouseClicked

    private void jTextField4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField4MouseClicked
        // TODO add your handling code here:
        try {
            DataBase db;
            db = new DataBase();
            int id = Integer.parseInt(jTextField4.getText().trim());
            db.unAllocateAstudent(id);

        } catch (SQLException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextField4.setText("");
        try {
            updateGroupedStudents();
            updateUnGroupedStudents();
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextField4MouseClicked

    private void jTextField5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField5MouseClicked
        // TODO add your handling code here:
        try {
            DataBase db;
            db = new DataBase();
            int id = Integer.parseInt(jTextField5.getText().trim());
            db.unAllocateAstudent(id);

        } catch (SQLException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextField5.setText("");
        try {
            updateGroupedStudents();
            updateUnGroupedStudents();
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextField5MouseClicked

    private void jTextField6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField6MouseClicked
        // TODO add your handling code here:
        try {
            DataBase db;
            db = new DataBase();
            int id = Integer.parseInt(jTextField6.getText().trim());
            db.unAllocateAstudent(id);

        } catch (SQLException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextField6.setText("");
        try {
            updateGroupedStudents();
            updateUnGroupedStudents();
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextField6MouseClicked

    private void jTextField7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField7MouseClicked
        // TODO add your handling code here:
        try {
            DataBase db;
            db = new DataBase();
            int id = Integer.parseInt(jTextField7.getText().trim());
            db.unAllocateAstudent(id);

        } catch (SQLException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextField7.setText("");
        try {
            updateGroupedStudents();
            updateUnGroupedStudents();
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextField7MouseClicked

    private void jTextField8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField8MouseClicked
        // TODO add your handling code here:
        try {
            DataBase db;
            db = new DataBase();
            int id = Integer.parseInt(jTextField8.getText().trim());
            db.unAllocateAstudent(id);

        } catch (SQLException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextField8.setText("");
        try {
            updateGroupedStudents();
            updateUnGroupedStudents();
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextField8MouseClicked

    private void jTextFieldNewTeacherIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNewTeacherIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNewTeacherIDActionPerformed

    private void undoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_undoActionPerformed

    private void jTextFieldTeacherIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTeacherIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTeacherIDActionPerformed

    private void jbDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeleteActionPerformed
        try {
            // TODO add your handling code here:

            DataBase db = new DataBase();
            db.unAllocateStudentsfromGroup(jTextField_Gname.getText().trim());
            db.unAllocateTeacher(jTextField_Gname.getText().trim());
            db.deleteGroup(jTextField_Gname.getText().trim());
        } catch (SQLException ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            ReFresh();
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jbDeleteActionPerformed

    private void jbCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelButtonActionPerformed

        jTabHome.setEnabledAt(2, true);
        jTabHome.setEnabledAt(3, true);
        jbAddGroup.setEnabled(true);
        jbAddTeacher.setEnabled(true);
        jbAddStudent.setEnabled(true);
        clearFields();
        jTextFieldGroupName.setText("");
        jTabHome.setSelectedIndex(0);

        try {
            // TODO add your handling code here:
            restore();

            //NEW CODE @ 5 o clock by faizan Ullah
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbCancelButtonActionPerformed

    private void jTabHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabHomeMouseClicked
        // TODO add your handling code here:
        backupMembers();
    }//GEN-LAST:event_jTabHomeMouseClicked

    private void jbClearFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbClearFieldActionPerformed
        // TODO add your handling code here:
        clearTeacher();
    }//GEN-LAST:event_jbClearFieldActionPerformed

    
    private void jbDeleteTeacher1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeleteTeacher1ActionPerformed
        // TODO add your handling code here:

        if (!(jTextFieldNewTeacherID.getText().equals("")) && !(jTextFieldNewTeacherName.getText().equals(""))) {
            System.out.println(jTextFieldNewTeacherID.getText() + " :: " + jTextFieldNewTeacherName.getText());
            try {
                ResultSet rs = dbGlobal.getSelectedTeacher(jTextFieldNewTeacherID.getText());
                rs.next();
                String check = rs.getString("isteaching");
                System.out.println("::::::::::::::: "+ check + " ::::::::::::");
                if ((check == null)) {
                    deleteTeacher();
                    clearTeacher();
                    JOptionPane.showMessageDialog(null, "Teacher Deleted From Database");
                }
                else{
                   JOptionPane.showMessageDialog(null, "Can not delete Allocatedd Teacher"+ "Remove it from "+check+" first"); 
                }

            } catch (SQLException ex) {
                Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        try {
            ReFresh();
        } catch (Exception ex) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbDeleteTeacher1ActionPerformed

    private void jbDeleteStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeleteStudentActionPerformed
        // TODO add your handling code here:
        if (!(jTextFieldStuName.getText().equals("")) && !(jTextFieldStuUoB.getText().equals(""))) {
            try {

                ResultSet rs = dbGlobal.getSelectedStudent(jTextFieldStuUoB.getText());
                rs.next();
                String check = rs.getString("ismember");
                if ((check == null)) {
                    deleteStudent();
                    clearStudents();
                    JOptionPane.showMessageDialog(null, "Student Deleted From Database");
                }
                else{
                    JOptionPane.showMessageDialog(null, "Can not delete Allocated Student"+ "Remove it from "+check+" first");
                }

            } catch (SQLException ex) {
                Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jbDeleteStudentActionPerformed

    private void jbClearFieldsStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbClearFieldsStudentActionPerformed
        // TODO add your handling code here:
        clearStudents();
    }//GEN-LAST:event_jbClearFieldsStudentActionPerformed

    public void updateGroupDetails() throws Exception {
        String groupName = jGroups.getValueAt(jGroups.getSelectedRow(), 0).toString();

        DataBase db = new DataBase();

        ResultSet rs = db.showTeacherDetail(groupName);

        /////////////////////////////////////////////////////////////////////////
        rs.next();

//        jTextField_Gname.setText(groupName);
        jTextField_teacherName.setText(rs.getString("name"));
        jTextField_teacherDepartment.setText(rs.getString("department"));
        jTextField_teacherID.setText(rs.getString("id"));

/////////////////////////////////////////////////////////////////////////
        rs = db.showStudentsDetail(groupName);

        DefaultTableModel model;
        model = (DefaultTableModel) ui.jTableGroupDetails.getModel();

        while (model.getRowCount() > 0) {
            for (int i = 0; i < model.getRowCount(); i++) {
                model.removeRow(i);
            }
        }

        for (int i = 0; rs.next(); i++) {
            model.addRow(new Object[]{rs.getString("id"), rs.getString("name"), rs.getInt("year")});
        }

        db.st.close();
        db.con.close();

    }

    public void populateEditGroup() throws Exception {
        String groupName = jGroups.getValueAt(jGroups.getSelectedRow(), 0).toString();

        DataBase db = new DataBase();

        ResultSet rs = db.showTeacherDetail(groupName);

        jTextFieldGroupName.setEditable(false);
        jTextFieldGroupName.setText(groupName);

        clearFields();

        /////////////////////////////////////////////////////////////////////////
        rs.next();

        jTextFieldTeacherName.setText(rs.getString("name"));
        jTextFieldTeacherID.setText(rs.getString("id"));

        /////////////////////////////////////////////////////////////////////////
        rs = db.showStudentsDetail(groupName);

        if (rs.next()) {
//        jTextField1.enableInputMethods(true);
            jTextField1.setText(rs.getString("id"));
        } else {
            return;
        }
        if (rs.next()) {
//        jTextField2.enableInputMethods(true);
            jTextField2.setText(rs.getString("id"));
        } else {
            return;
        }
        if (rs.next()) {
//        jTextField3.enableInputMethods(true);
            jTextField3.setText(rs.getString("id"));
        } else {
            return;
        }
        if (rs.next()) {
//        jTextField1.enableInputMethods(true);
            jTextField4.setText(rs.getString("id"));
        } else {
            return;
        }
        if (rs.next()) {
//        jTextField1.enableInputMethods(true);
            jTextField5.setText(rs.getString("id"));
        } else {
            return;
        }
        if (rs.next()) {
//        jTextField1.enableInputMethods(true);
            jTextField6.setText(rs.getString("id"));
        } else {
            return;
        }
        if (rs.next()) {
//        jTextField1.enableInputMethods(true);
            jTextField7.setText(rs.getString("id"));
        } else {
            return;
        }
        if (rs.next()) {
//        jTextField1.enableInputMethods(true);
            jTextField8.setText(rs.getString("id"));
        } else {
            return;
        }

//        db.unAllocateGroup(groupName);
        db.st.close();
        db.con.close();

    }

    public void updateGroups() throws Exception {
        DataBase db = new DataBase();
        ResultSet rs = db.showCreatedGroups(ui.selectedYear);

        DefaultTableModel model;
        model = (DefaultTableModel) ui.jGroups.getModel();

        while (model.getRowCount() > 0) {
            for (int i = 0; i < model.getRowCount(); i++) {
                model.removeRow(i);
            }
        }

        for (int i = 0; rs.next(); i++) {
            model.addRow(new Object[]{rs.getString("name"), rs.getInt("members")});
        }
        db.st.close();
        db.con.close();
    }

    public void updateGroupedStudents() throws Exception {

        DataBase db = new DataBase();
        ResultSet rs = db.showGroupedStudents(ui.selectedYear);

        DefaultTableModel model, model2;

        model = (DefaultTableModel) ui.jTableStudents.getModel();

        while (model.getRowCount() > 0) {
            for (int i = 0; i < model.getRowCount(); i++) {
                model.removeRow(i);
            }
        }

        for (int i = 0; rs.next(); i++) {
            model.addRow(new Object[]{rs.getInt("id"), rs.getString("name"), rs.getInt("year"), rs.getString("ismember")});
        }
        db.st.close();
        db.con.close();

//        DataBase db2 = new DataBase();
//        ResultSet rs2 = db.showUnGroupedStudents(ui.selectedGroup);
//
//        for (int i = 0; rs2.next(); i++) {
//            model.addRow(new Object[]{rs.getInt("id"), rs.getString("name"), rs.getInt("year"), "Unallocated"});
//        }
//
//        db.st.close();
//        db.con.close();
    }

    public void updateUnGroupedStudents() throws Exception {
        DataBase db = new DataBase();
        ResultSet rs = db.showUnGroupedStudents(ui.selectedYear);

        DefaultTableModel model, model2;

        model = (DefaultTableModel) ui.jTableStudents.getModel();

//        while (model.getRowCount() > 0) {
//            for (int i = 0; i < model.getRowCount(); i++) {
//                model.removeRow(i);
//            }
//        }
        for (int i = 0; rs.next(); i++) {
            model.addRow(new Object[]{rs.getInt("id"), rs.getString("name"), rs.getInt("year"), "Unallocated"});
        }
        db.st.close();
        db.con.close();
    }

    public void updateTeacher() throws Exception {
        DataBase db = new DataBase();
        ResultSet rs = db.showGroupedTeacher(ui.selectedYear);

        DefaultTableModel model, model2;

        model = (DefaultTableModel) ui.jTableTeachers.getModel();

        while (model.getRowCount() > 0) {
            for (int i = 0; i < model.getRowCount(); i++) {
                model.removeRow(i);
            }
        }

        for (int i = 0; rs.next(); i++) {
            model.addRow(new Object[]{rs.getInt("id"), rs.getString("name"), rs.getString("isteaching")});
        }
        db.st.close();
        db.con.close();

//        db = new DataBase();
//        ResultSet rs2 = db.showUnGroupedTeacher(ui.selectedGroup);
//
//        for (int i = 0; rs2.next(); i++) {
//            model.addRow(new Object[]{rs.getInt("id"), rs.getString("name"), "Unallocated"});
//        }
//
//        db.st.close();
//
//        db.con.close();
    }

    public void updateUnGroupedTeacher() throws Exception {
        DataBase db = new DataBase();
        ResultSet rs = db.showUnGroupedTeacher(ui.selectedYear);

        DefaultTableModel model;

        model = (DefaultTableModel) ui.jTableTeachers.getModel();

//        while (model.getRowCount() > 0) {
//            for (int i = 0; i < model.getRowCount(); i++) {
//                model.removeRow(i);
//            }
//        }
        for (int i = 0; rs.next(); i++) {
            model.addRow(new Object[]{rs.getInt("id"), rs.getString("name"), "UnAllocated"});
        }

        db.st.close();

        db.con.close();
    }

    public void addNewGroup() throws Exception {

        String UoB = jTableStudents.getValueAt(jTableStudents.getSelectedRow(), 0).toString();

        DataBase db = new DataBase();

        ResultSet rs = db.getSelectedStudent(UoB);

        /////////////////////////////////////////////////////////////////////////
        rs.next();
        /////////////////////////////////////////////////////////////////////////

        if (jTextField1.getText().equals(rs.getString("id"))) {
            return;
        } else if (jTextField2.getText().equals(rs.getString("id"))) {
            return;
        } else if (jTextField3.getText().equals(rs.getString("id"))) {
            return;
        } else if (jTextField4.getText().equals(rs.getString("id"))) {
            return;
        } else if (jTextField5.getText().equals(rs.getString("id"))) {
            return;
        } else if (jTextField6.getText().equals(rs.getString("id"))) {
            return;
        } else if (jTextField7.getText().equals(rs.getString("id"))) {
            return;
        } else if (jTextField8.getText().equals(rs.getString("id"))) {
            return;
        }

        if (rs.getString("ismember") == null) {

            if (jTextField1.getText().isEmpty()) {
                jTextField1.setText(rs.getString("id"));
            } else if (jTextField2.getText().isEmpty()) {
                jTextField2.setText(rs.getString("id"));
            } else if (jTextField3.getText().isEmpty()) {
                jTextField3.setText(rs.getString("id"));
            } else if (jTextField4.getText().isEmpty()) {
                jTextField4.setText(rs.getString("id"));
            } else if (jTextField5.getText().isEmpty()) {
                jTextField5.setText(rs.getString("id"));
            } else if (jTextField6.getText().isEmpty()) {
                jTextField6.setText(rs.getString("id"));
            } else if (jTextField7.getText().isEmpty()) {
                jTextField7.setText(rs.getString("id"));
            } else if (jTextField8.getText().isEmpty()) {
                jTextField8.setText(rs.getString("id"));
            }

        } else {
            System.out.println("Can not create group");
        }
        //update his status from database

        /////////////////////////////////////////////////////////////////////////
        db.st.close();
        db.con.close();

    }

    public void addTeacherinNewGroup() throws Exception {

        String id = jTableTeachers.getValueAt(jTableTeachers.getSelectedRow(), 0).toString();

        DataBase db = new DataBase();

        ResultSet rs = db.getSelectedTeacher(id);

        /////////////////////////////////////////////////////////////////////////
        rs.next();
        /////////////////////////////////////////////////////////////////////////
        if (rs.getString("isteaching") == null) {

            jTextFieldTeacherName.setText(rs.getString("name").trim());
            jTextFieldTeacherID.setText(rs.getString("id")); //string int auto conversion???//

        }
        System.out.println("Can not create group");
        //update his status from database
        //update his status from database

        /////////////////////////////////////////////////////////////////////////
        db.st.close();
        db.con.close();

    }

    private void editTeacher() throws Exception {
        String id = jTableTeachers.getValueAt(jTableTeachers.getSelectedRow(), 0).toString();

        DataBase db = new DataBase();

        ResultSet rs = db.getSelectedTeacher(id);

        /////////////////////////////////////////////////////////////////////////
        rs.next();
        /////////////////////////////////////////////////////////////////////////
//      Integer.parseInt((String) jComboBox1.getSelectedItem());

        jTextFieldNewTeacherName.setText(rs.getString("name"));
        jTextFieldNewTeacherID.setText(rs.getString("id"));
        String department = rs.getString("department");

//        String name =((String) jComboBoxDepartment.getSelectedItem()); //what is happening here???
        if (department.equals("CS") || department.equals("cs")) {
            jComboBoxDepartment.setSelectedIndex(0);
        } else if (department.equals("EE") || department.equals("ee")) {
            jComboBoxDepartment.setSelectedIndex(1);
        } else {
            jComboBoxDepartment.setSelectedIndex(2);
        }

        //update his status from database
        //update his status from database
        /////////////////////////////////////////////////////////////////////////
        db.st.close();
        db.con.close();

    }

    private void AddUpdateStudent() throws Exception {
        String UoB = jTableStudents.getValueAt(jTableStudents.getSelectedRow(), 0).toString();

        DataBase db = new DataBase();

        ResultSet rs = db.getSelectedStudent(UoB);

        /////////////////////////////////////////////////////////////////////////
        rs.next();
        /////////////////////////////////////////////////////////////////////////
        jTextFieldStuUoB.setText(rs.getString("id"));
        jTextFieldStuName.setText(rs.getString("name"));

//        jTextFieldStuYear.setText(rs.getString("year"));  
        String comboIndex = rs.getString("year");
        int index = Integer.parseInt(comboIndex);
        index--;
        jComboBoxYear.setSelectedIndex(index);

        db.st.close();
        db.con.close();

    }

    private void saveTeacher() throws SQLException {
        String teacherName = jTextFieldNewTeacherName.getText();
        //To change body of generated methods, choose Tools | Templates.
        String department = ((String) jComboBoxDepartment.getSelectedItem());

        String id = jTextFieldNewTeacherID.getText();

        if (teacherName.length() <= 3 || teacherName.equals("")) {
            JOptionPane.showMessageDialog(null, "Invalid Name");
        }

        DataBase db = new DataBase();

        db.saveTeacher(id, teacherName, department);

        db.st.close();
        db.con.close();

    }

    private void saveStudent() throws Exception {
        String studentName = jTextFieldStuName.getText();
        String studentID = jTextFieldStuUoB.getText();
        String comboIndex = ((String) jComboBoxYear.getSelectedItem());
        int year = Integer.parseInt(comboIndex);

        DataBase db = new DataBase();

        db.saveStudent(studentID, studentName, year);

        db.st.close();
        db.con.close();
    }

    public void saveGroup() throws Exception {

        String[] sNames = new String[8];

        sNames[0] = jTextField1.getText().trim();
        sNames[1] = jTextField2.getText().trim();
        sNames[2] = jTextField3.getText().trim();
        sNames[3] = jTextField4.getText().trim();
        sNames[4] = jTextField5.getText().trim();
        sNames[5] = jTextField6.getText().trim();
        sNames[6] = jTextField7.getText().trim();
        sNames[7] = jTextField8.getText().trim();

        int count = 0;
        for (int i = 0; i < 8; i++) {
            if (!(sNames[i].equals(""))) {
                count++;

            }
        }
        if (count <= 1) {
            JOptionPane.showMessageDialog(null, "There can only be at least 2 members in a group");
            return;
        }
        String groupName = jTextFieldGroupName.getText();
        if (groupName.equals("")) {
            JOptionPane.showMessageDialog(null, "Group name can not be empty.");
            return;
        }
        String teacherID = jTextFieldTeacherID.getText();

        if (teacherID.equals("")) {
            JOptionPane.showMessageDialog(null, "Group can not exist without a teacher.");
            return;
        }

        DataBase db = new DataBase();
        int nOfgroups3members = db.checkException();
        System.out.println(nOfgroups3members + " groups pehlay he bannay howe hain");

        if (nOfgroups3members >= 3 && count < 4) {
            JOptionPane.showMessageDialog(null, "There can only be three groups with less than 4 members.");
            return;
        } else {
            db.saveGroup(groupName, sNames, count, teacherID, ui.selectedYear);
            JOptionPane.showMessageDialog(null, "Group name " + groupName + " has been Created");
            jTabHome.setSelectedIndex(0);
        }

    }

    void ReFresh() throws Exception {
        updateGroups();

        updateGroupedStudents();
        updateUnGroupedStudents();

        updateTeacher();
        updateUnGroupedTeacher();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new UserInterface().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    public void backupMembers() {
        slist = new String[8];
        slist[0] = jTextField1.getText().trim();
        slist[1] = jTextField2.getText().trim();
        slist[2] = jTextField3.getText().trim();
        slist[3] = jTextField4.getText().trim();
        slist[4] = jTextField5.getText().trim();
        slist[5] = jTextField6.getText().trim();
        slist[6] = jTextField7.getText().trim();
        slist[7] = jTextField8.getText().trim();

    }

    public void restore() throws SQLException, Exception {
        int count = 0;
        for (int i = 0; i < 8; i++) {
            if (!(slist[i].equals(""))) {
                count++;
            }
        }

        String groupName = jTextFieldGroupName.getText();

        String teacherID = jTextFieldTeacherID.getText();
        if(!((groupName.equals("") && teacherID.equals("")))){
        DataBase db = new DataBase();
        db.saveGroup(groupName, slist, count, teacherID, ui.selectedYear);
        }
    }

    private void deleteTeacher() throws SQLException {
        
        DataBase db = new DataBase();
        jTextFieldNewTeacherID.getText();
        jTextFieldNewTeacherName.getText();

        db.deleteIt(jTextFieldNewTeacherID.getText());

        db.st.close();
        db.con.close();
    }

    private void deleteStudent() throws SQLException {
        DataBase db = new DataBase();
        jTextFieldStuName.getText();
        jTextFieldStuUoB.getText();

        db.deleteItStudent(jTextFieldStuUoB.getText());

        db.st.close();
        db.con.close();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBoxDepartment;
    private javax.swing.JComboBox<String> jComboBoxYear;
    public javax.swing.JTable jGroups;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelAddGroup;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JTabbedPane jTabHome;
    private javax.swing.JTabbedPane jTabStudentAndTeacher;
    private javax.swing.JTable jTableGroupDetails;
    private javax.swing.JTable jTableStudents;
    private javax.swing.JTable jTableTeachers;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextArea jTextArea6;
    private javax.swing.JTextArea jTextArea7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextFieldGroupName;
    private javax.swing.JTextField jTextFieldNewTeacherID;
    private javax.swing.JTextField jTextFieldNewTeacherName;
    private javax.swing.JTextField jTextFieldStuName;
    private javax.swing.JTextField jTextFieldStuUoB;
    private javax.swing.JTextField jTextFieldTeacherID;
    private javax.swing.JTextField jTextFieldTeacherName;
    private javax.swing.JTextField jTextField_Gname;
    private javax.swing.JTextField jTextField_teacherDepartment;
    private javax.swing.JTextField jTextField_teacherID;
    private javax.swing.JTextField jTextField_teacherName;
    private javax.swing.JButton jbAddGroup;
    private javax.swing.JButton jbAddGroup1;
    private javax.swing.JButton jbAddStudent;
    private javax.swing.JButton jbAddTeacher;
    private javax.swing.JButton jbCancelButton;
    private javax.swing.JButton jbClearField;
    private javax.swing.JButton jbClearFieldsStudent;
    private javax.swing.JButton jbDelete;
    private javax.swing.JButton jbDeleteStudent;
    private javax.swing.JButton jbDeleteTeacher1;
    private javax.swing.JButton jbSaveGroup;
    private javax.swing.JButton jbSaveUpdateStudent;
    private javax.swing.JButton jbSaveUpdateTeacher;
    private javax.swing.JButton undo;
    // End of variables declaration//GEN-END:variables

}
